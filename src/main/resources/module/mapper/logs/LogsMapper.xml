<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gao.ssm.module.mapper.logs.LogsMapper" >
  <resultMap id="BaseResultMap" type="com.gao.ssm.module.pojo.logs.Logs" >
    <!--do not modify start-->
    <id column="log_id" property="logId" jdbcType="VARCHAR" />
    <result column="log_title" property="logTitle" jdbcType="VARCHAR" />
    <result column="log_summary" property="logSummary" jdbcType="VARCHAR" />
    <result column="log_content" property="logContent" jdbcType="VARCHAR" />
    <result column="log_created" property="logCreated" jdbcType="TIMESTAMP" />
    <result column="log_update" property="logUpdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    log_id, log_title, log_summary, log_content, log_created, log_update
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gao.ssm.module.pojo.logs.LogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from logs
    where log_id = #{logId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from logs
    where log_id = #{logId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.gao.ssm.module.pojo.logs.LogsExample" >
    delete from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gao.ssm.module.pojo.logs.Logs" >
    insert into logs (log_id, log_title, log_summary,
      log_content, log_created, log_update
      )
    values (#{logId,jdbcType=VARCHAR}, #{logTitle,jdbcType=VARCHAR}, #{logSummary,jdbcType=VARCHAR},
      #{logContent,jdbcType=VARCHAR}, #{logCreated,jdbcType=TIMESTAMP}, #{logUpdate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gao.ssm.module.pojo.logs.Logs" >
    insert into logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="logTitle != null" >
        log_title,
      </if>
      <if test="logSummary != null" >
        log_summary,
      </if>
      <if test="logContent != null" >
        log_content,
      </if>
      <if test="logCreated != null" >
        log_created,
      </if>
      <if test="logUpdate != null" >
        log_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="logTitle != null" >
        #{logTitle,jdbcType=VARCHAR},
      </if>
      <if test="logSummary != null" >
        #{logSummary,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null" >
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="logCreated != null" >
        #{logCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="logUpdate != null" >
        #{logUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gao.ssm.module.pojo.logs.LogsExample" resultType="java.lang.Integer" >
    select count(*) from logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update logs
    <set >
      <if test="record.logId != null" >
        log_id = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.logTitle != null" >
        log_title = #{record.logTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.logSummary != null" >
        log_summary = #{record.logSummary,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null" >
        log_content = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.logCreated != null" >
        log_created = #{record.logCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logUpdate != null" >
        log_update = #{record.logUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update logs
    set log_id = #{record.logId,jdbcType=VARCHAR},
    log_title = #{record.logTitle,jdbcType=VARCHAR},
    log_summary = #{record.logSummary,jdbcType=VARCHAR},
    log_content = #{record.logContent,jdbcType=VARCHAR},
    log_created = #{record.logCreated,jdbcType=TIMESTAMP},
    log_update = #{record.logUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gao.ssm.module.pojo.logs.Logs" >
    update logs
    <set >
      <if test="logTitle != null" >
        log_title = #{logTitle,jdbcType=VARCHAR},
      </if>
      <if test="logSummary != null" >
        log_summary = #{logSummary,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null" >
        log_content = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="logCreated != null" >
        log_created = #{logCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="logUpdate != null" >
        log_update = #{logUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gao.ssm.module.pojo.logs.Logs" >
    update logs
    set log_title = #{logTitle,jdbcType=VARCHAR},
      log_summary = #{logSummary,jdbcType=VARCHAR},
      log_content = #{logContent,jdbcType=VARCHAR},
      log_created = #{logCreated,jdbcType=TIMESTAMP},
      log_update = #{logUpdate,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=VARCHAR}
  </update>
  <!--do not modify end-->

  <!--自定义 start-->
  <select id="findAll" parameterType="List" resultMap="BaseResultMap">
    SELECT *FROM logs
order by log_id DESC ;
  </select>

  <!--自定义 start-->
</mapper>